buildscript {
    repositories {
        maven { url = 'https://files.minecraftforge.net/maven' }
        jcenter()
    }

    dependencies {
        classpath(group: 'net.minecraftforge.gradle', name: 'ForgeGradle', version: '3.+', changing: true) {
            exclude group: 'trove'
        }
    }
}

plugins {
    id 'org.jetbrains.kotlin.jvm' version '1.3.71'
    id 'org.jetbrains.dokka' version '0.10.1'
    id "org.ajoberstar.grgit" version "4.0.1"
    id "com.jfrog.bintray" version "1.8.4"
    id "com.matthewprenger.cursegradle" version "1.4.0"
    id "maven-publish"
}

import coffee.cypher.gradle.mcconfig.*

apply plugin: 'net.minecraftforge.gradle'
apply plugin: 'coffee.cypher.gradle.mcconfig'

wrapper {
    gradleVersion = '5.4.1'
    distributionType = Wrapper.DistributionType.ALL
}

group 'coffee.cypher.kettle'

minecraft {
    mappings channel: 'snapshot', version: '20200316-1.15.1'

    runs {
        client {
            workingDirectory project.file('run')

            property 'forge.logging.markers', 'SCAN,REGISTRIES,REGISTRYDUMP'

            property 'forge.logging.console.level', 'debug'

            mods {
                kettle {
                    source sourceSets.main
                }
            }
        }

        data {
            workingDirectory project.file('run')

            property 'forge.logging.markers', 'SCAN,REGISTRIES,REGISTRYDUMP'

            property 'forge.logging.console.level', 'debug'

            args '--mod', 'kettle', '--all', '--output', file('src/generated/resources/')

            mods {
                kettle {
                    source sourceSets.main
                }
            }
        }
    }
}

sourceCompatibility = targetCompatibility = compileKotlin.sourceCompatibility = compileKotlin.targetCompatibility = '1.8'

compileKotlin {
    kotlinOptions {
        freeCompilerArgs += '-XXLanguage:+NewInference'
        freeCompilerArgs += '-Xopt-in=kotlin.RequiresOptIn'
    }
}

//deps
repositories {
    jcenter()

    maven {
        url "https://dl.bintray.com/kotlin/kotlin-eap"
    }
}

dependencies {
    minecraft 'net.minecraftforge:forge:1.15.2-31.1.24'
    compileOnly "org.jetbrains.kotlin:kotlin-stdlib-jdk8"
}

//env setup
tasks.register('installGitHooks', Copy) {
    group = 'build setup'
    description = 'Installs recommended git hooks for the project'
    duplicatesStrategy = 'include'

    from 'git_hooks'
    into '.git/hooks'
}

build.dependsOn installGitHooks

//documentation
def commonDocConfig = {
    configuration {
        reportUndocumented = false

        sourceLink {
            path = "src/main/kotlin"
            url = "https://github.com/Cypher121/kettle/blob/master/src/main/kotlin"
            lineSuffix = "#L"
        }

        jdkVersion = 8

        platform = 'jvm'

        targets = ['jvm']
    }
}

tasks.register('genJavadoc', org.jetbrains.dokka.gradle.DokkaTask) {
    group = 'documentation'
    description = 'Generates Javadoc for the project'

    outputFormat = 'javadoc'
    outputDirectory = javadoc.destinationDir

    configure commonDocConfig
}

tasks.register('genGitDoc', org.jetbrains.dokka.gradle.DokkaTask) {
    group = 'documentation'
    description = 'Generates GitHub Markdown reference for the project'

    outputFormat = 'gfm'
    outputDirectory = 'docs/reference'

    configure commonDocConfig
}

build.dependsOn(genGitDoc)

//artifacts

tasks.register('javadocJar', Jar) {
    group = 'build'
    description = 'Creates a Javadoc artifact'

    classifier = 'javadoc'
    from javadoc.destinationDir

    dependsOn genJavadoc
}

tasks.register('libOnlyJar', Jar) {
    group = 'build'
    description = 'Creates an artifact with mod definitions stripped out'

    configs.apply(manifest)

    classifier = 'lib'
    from sourceSets.main.output
    exclude('**/mods.toml', '**/Kettle.class')
}

tasks.register('sourceJar', Jar) {
    group = 'build'
    description = 'Creates a source code artifact'

    Configurations.configureManifest(manifest, project)

    classifier = 'sources'
    from sourceSets.main.allSource
}

reobf.create('libOnlyJar')
libOnlyJar.finalizedBy(reobfLibOnlyJar)
jar.finalizedBy('reobfJar')

configs.apply(jar.manifest)

assemble.dependsOn(javadocJar, sourceJar, libOnlyJar)

//publishing
ext.versionComponents = version.split('-')
ext.gameVersion = versionComponents[0]
ext.releaseVersion = versionComponents[1]

tasks.register('addVersionTag') {
    group = 'versioning'
    description = 'Tags current commit for release with the project version'
    doLast {
        def git = grgit.open()

        if (git.tag.list().any { it.name == "v$project.version" }) {
            throw new IllegalArgumentException("Tag 'v$project.version' already exists")
        }

        git.tag.add(name: "v$project.version", message: "Tag release $project.version")
    }
}

ext.releaseClassifier = versionComponents.size() < 3 ? '' : "-${versionComponents[2]}"

if (releaseClassifier.contains('beta') || releaseClassifier.contains('rc')) {
    ext.buildType = 'beta'
} else if (releaseClassifier.contains('alpha')) {
    ext.buildType = 'alpha'
} else {
    ext.buildType = 'release'
}


publishing {
    publications {
        maven(MavenPublication) {
            groupId = project.group
            artifactId = project.name
            version = project.version

            artifact jar
            artifact javadocJar
            artifact libOnlyJar
            artifact sourceJar

            pom {
                name = 'Kettle'
                description = 'Kotlin utilities for Minecraft Forge mod development'
                url = 'https://minecraft.curseforge.com/projects/kettle'

                scm {
                    connection = 'scm:git:git://github.com/Cypher121/kettle.git'
                    developerConnection = 'scm:git:ssh://github.com/Cypher121/kettle.git'
                    url = 'https://github.com/Cypher121/kettle/'
                }
            }

            configs.apply(pom)
        }
    }
}

bintray {
    user = System.getenv('BINTRAY_USER') ?: ''
    key = System.getenv('BINTRAY_KEY') ?: ''

    publications = ['maven']
    publish = true

    pkg {
        repo = 'minecraft'
        name = 'Kettle'
        userOrg = 'cypher121'
        licenses = ['MIT']
        vcsUrl = 'https://github.com/Cypher121/kettle.git'
        labels = ['minecraft', 'minecraftforge', 'kotlin']

        version {
            released = new Date()

            name = project.version
            desc = "$project.name $project.version"
            vcsTag = project.version

            mavenCentralSync {
                sync = true
            }
        }
    }
}

curseforge {
    apiKey = System.getenv('CURSEFORGE_API_KEY') ?: ''

    project {
        id = '316905'
        releaseType = buildType

        mainArtifact tasks.getByName('jar')
        addArtifact tasks.getByName('libOnlyJar')
        addArtifact tasks.getByName('sourceJar')
        addArtifact tasks.getByName('javadocJar')
    }
}

tasks.register('release') {
    group = 'publishing'
    description = 'Perform release across all registered platforms'

    dependsOn build

    finalizedBy('publish', 'bintrayUpload', 'curseforge')
}

//TODO use https://mcforge.readthedocs.io/en/latest/gettingstarted/dependencymanagement/ if/when it comes to 1.13+